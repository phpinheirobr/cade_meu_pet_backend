
spring:
    datasource:
        url: jdbc:mysql://localhost:3306/demo?createDatabaseIfNotExist=true
        username: root
        password: root

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    security:
      oauth2:
        client:
          registration:
            google:
              client-id: 242589826292-14v07cqvfenqt9a60109qrgbr96j4p2a.apps.googleusercontent.com
              client-secret: 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
             
            
              
        
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000

  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:8081/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect